// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Icon = require("./Icon.js");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Text$BsReactNative = require("bs-react-native/lib/js/src/components/text.js");
var View$BsReactNative = require("bs-react-native/lib/js/src/components/view.js");
var Style$BsReactNative = require("bs-react-native/lib/js/src/style.js");
var StyleSheet$BsReactNative = require("bs-react-native/lib/js/src/styleSheet.js");
var TouchableOpacity$BsReactNative = require("bs-react-native/lib/js/src/components/touchableOpacity.js");

var component = ReasonReact.statelessComponent("ListItem");

function make(item, onDelete, onComplete, index, _) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      var isEven = function (n) {
        return +(n % 2 === 0);
      };
      var match = isEven(index);
      var match$1 = isEven(index);
      var match$2 = isEven(index);
      var match$3 = item[/* completed */2];
      var match$4 = isEven(index);
      var match$5 = isEven(index);
      var styles = StyleSheet$BsReactNative.create({
            item: Style$BsReactNative.style(/* :: */[
                  Style$BsReactNative.height(/* Pt */Block.__(0, [32])),
                  /* :: */[
                    Style$BsReactNative.width(/* Pct */Block.__(1, [100])),
                    /* :: */[
                      Style$BsReactNative.flexDirection(/* Row */0),
                      /* :: */[
                        Style$BsReactNative.justifyContent(/* SpaceBetween */5),
                        /* :: */[
                          Style$BsReactNative.backgroundColor(match !== 0 ? "#f9f9f9" : "#db4d3f"),
                          /* :: */[
                            Style$BsReactNative.paddingLeft(/* Pt */Block.__(0, [8])),
                            /* :: */[
                              Style$BsReactNative.paddingRight(/* Pt */Block.__(0, [8])),
                              /* [] */0
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]),
            wrapper: Style$BsReactNative.style(/* :: */[
                  Style$BsReactNative.flexDirection(/* Row */0),
                  /* [] */0
                ]),
            text: Style$BsReactNative.style(/* :: */[
                  Style$BsReactNative.fontSize(/* Float */Block.__(0, [18])),
                  /* :: */[
                    Style$BsReactNative.height(/* Pt */Block.__(0, [32])),
                    /* :: */[
                      Style$BsReactNative.lineHeight(32),
                      /* :: */[
                        Style$BsReactNative.textDecorationColor(match$1 !== 0 ? "#db4d3f" : "#f9f9f9"),
                        /* :: */[
                          Style$BsReactNative.color(match$2 !== 0 ? "#db4d3f" : "#f9f9f9"),
                          /* :: */[
                            Style$BsReactNative.textDecorationLine(match$3 !== 0 ? /* LineThrough */2 : /* None */0),
                            /* :: */[
                              Style$BsReactNative.textDecorationStyle(/* Solid */0),
                              /* [] */0
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]),
            date: Style$BsReactNative.style(/* :: */[
                  Style$BsReactNative.fontSize(/* Float */Block.__(0, [14])),
                  /* :: */[
                    Style$BsReactNative.height(/* Pt */Block.__(0, [32])),
                    /* :: */[
                      Style$BsReactNative.lineHeight(32),
                      /* :: */[
                        Style$BsReactNative.marginRight(/* Pt */Block.__(0, [8])),
                        /* :: */[
                          Style$BsReactNative.color(match$4 !== 0 ? "#db4d3f" : "#f9f9f9"),
                          /* [] */0
                        ]
                      ]
                    ]
                  ]
                ]),
            icon: Style$BsReactNative.style(/* :: */[
                  Style$BsReactNative.fontSize(/* Float */Block.__(0, [24])),
                  /* :: */[
                    Style$BsReactNative.color(match$5 !== 0 ? "#db4d3f" : "#f9f9f9"),
                    /* [] */0
                  ]
                ]),
            iconContainer: Style$BsReactNative.style(/* :: */[
                  Style$BsReactNative.alignItems(/* Center */2),
                  /* :: */[
                    Style$BsReactNative.justifyContent(/* Center */2),
                    /* [] */0
                  ]
                ])
          });
      return ReasonReact.element(/* None */0, /* None */0, TouchableOpacity$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[onComplete], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[ReasonReact.element(/* None */0, /* None */0, View$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[styles.item], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[
                                ReasonReact.element(/* None */0, /* None */0, Text$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[styles.text], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[item[/* text */1]])),
                                ReasonReact.element(/* None */0, /* None */0, View$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[styles.wrapper], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[
                                          ReasonReact.element(/* None */0, /* None */0, Text$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[styles.date], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[item[/* created */3]])),
                                          ReasonReact.element(/* None */0, /* None */0, TouchableOpacity$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[styles.iconContainer], /* None */0, /* Some */[onDelete], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[ReasonReact.element(/* None */0, /* None */0, Text$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[styles.icon], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[ReasonReact.element(/* None */0, /* None */0, Icon.make(/* array */[]))]))]))
                                        ]))
                              ]))]));
    });
  return newrecord;
}

var ListItem = /* module */[
  /* component */component,
  /* make */make
];

var component$1 = ReasonReact.statelessComponent("ItemList");

function make$1(list, onDelete, onComplete, _) {
  var newrecord = component$1.slice();
  newrecord[/* render */9] = (function () {
      return ReasonReact.element(/* None */0, /* None */0, View$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[$$Array.of_list(List.mapi((function (i, item) {
                                  return ReasonReact.element(/* Some */[item[/* id */0]], /* None */0, make(item, Curry._1(onDelete, item), Curry._1(onComplete, item), i, /* array */[]));
                                }), list))]));
    });
  return newrecord;
}

var ItemList = /* module */[
  /* component */component$1,
  /* make */make$1
];

exports.ListItem = ListItem;
exports.ItemList = ItemList;
/* component Not a pure module */
